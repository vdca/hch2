setwd("~/gdrive/aldakor/lana/MCK/gehigarriak/hch2/code")
rm(list=ls())     # remove previous objects from workspace
source("hch2_funs.R")
library(tidyverse)
theme_set(theme_bw() + theme(strip.background = element_blank()))
library(broom)
library(lme4)
library(lmerTest)
library(stringdist)
library(tidytext)
d <- readRDS("../data/hch2_sequences.rds") %>% tbl_df() %>%
select(chain, generation, subjID, seqid = seqid1, seqIN = inseq, seqOUT = outseq)
d <- readRDS("../data/hch2_sequences.rds") %>% tbl_df() %>%
select(chain, generation, subjID, seqid = seqid1, seqIN = inseq, seqOUT = outseq)
base.prob <- readRDS("../data/hch2_baseprob.rds")
pgram.base2 <- base.prob %>%
mutate(n = freq) %>%
select(gramsize, ngram, n)
minbase2 <- pgram.base2 %>% filter(n != 0) %>% select(n) %>% min() / 1000000
minbase2 <- minbase2*30
pgram.rat <- pgram.f %>%
left_join(pgram.base2, by = c("gramsize", "ngram")) %>% # merge with simulated baseline
mutate(n.subj = n.x) %>%
rename(f.subj = n.x, f.base2 = n.y) %>%
filter(f.base2 != 0 | f.subj != 0) %>% # only keep ngrams present in subjects or simulated baseline
mutate_at(vars(f.base2, f.subj), funs((. + minbase2) / (max(.) + minbase2))) %>%
mutate(logratio2 = log2(f.subj / f.base2))
keys <- as.character(1:4)
pgrams <- combis(2, 4, c(keys, "."))
pgrams.subjs <- crossing(d$subjID, pgrams$ngram) %>%
rename(subjID = `d$subjID`, ngram = `pgrams$ngram`)
pgram.f <- d %>%
mutate(seqOUT.boundaries = paste0(".", seqOUT, ".")) %>%
select(subjID, seqOUT.boundaries) %>%
left_join(pgrams.subjs) %>%
filter(str_detect(seqOUT.boundaries, fixed(ngram))) %>%
count(subjID, ngram) %>%
right_join(pgrams.subjs) %>%
left_join(pgrams) %>%
mutate(n = ifelse(is.na(n), as.integer(0), n))
base.prob <- readRDS("../data/hch2_baseprob.rds")
pgram.base2 <- base.prob %>%
mutate(n = freq) %>%
select(gramsize, ngram, n)
minbase2 <- pgram.base2 %>% filter(n != 0) %>% select(n) %>% min() / 1000000
minbase2 <- minbase2*30
pgram.rat <- pgram.f %>%
left_join(pgram.base2, by = c("gramsize", "ngram")) %>% # merge with simulated baseline
mutate(n.subj = n.x) %>%
rename(f.subj = n.x, f.base2 = n.y) %>%
filter(f.base2 != 0 | f.subj != 0) %>% # only keep ngrams present in subjects or simulated baseline
mutate_at(vars(f.base2, f.subj), funs((. + minbase2) / (max(.) + minbase2))) %>%
mutate(logratio2 = log2(f.subj / f.base2))
stims <- tidy(readRDS("../data/hch2_baseline.rds"))
stims <- stims %>%
rename(sylgram = x) %>%
mutate(id = seq(nrow(stims)))
syllabs <- c("1", "2", "3", "4", ".")
syllabs2 <- c("ban", "bi", "ta", "tin", ".")
onsets <- c("b", "b", "t", "t", ".")
nuclei <- c("a", "i", "a", "i", ".")
codas <- c("n", "-", "-", "n", ".")
basekeymap <- tibble(syllabs, onsets, nuclei, codas, syllabs2)
base2 <- readRDS("../data/hch2_baseline_features.rds")
base2
